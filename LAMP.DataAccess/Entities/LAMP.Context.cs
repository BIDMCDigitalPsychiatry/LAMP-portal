//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LAMP.DataAccess.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LAMPEntities : DbContext
    {
        public LAMPEntities()
            : base("name=LAMPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Admin_BatchSchedule> Admin_BatchSchedule { get; set; }
        public virtual DbSet<Admin_BatchScheduleCTest> Admin_BatchScheduleCTest { get; set; }
        public virtual DbSet<Admin_BatchScheduleCustomTime> Admin_BatchScheduleCustomTime { get; set; }
        public virtual DbSet<Admin_BatchScheduleSurvey> Admin_BatchScheduleSurvey { get; set; }
        public virtual DbSet<Admin_CTestSchedule> Admin_CTestSchedule { get; set; }
        public virtual DbSet<Admin_CTestScheduleCustomTime> Admin_CTestScheduleCustomTime { get; set; }
        public virtual DbSet<Admin_CTestSurveySettings> Admin_CTestSurveySettings { get; set; }
        public virtual DbSet<Admin_JewelsTrailsASettings> Admin_JewelsTrailsASettings { get; set; }
        public virtual DbSet<Admin_JewelsTrailsBSettings> Admin_JewelsTrailsBSettings { get; set; }
        public virtual DbSet<Admin_Settings> Admin_Settings { get; set; }
        public virtual DbSet<Admin_SurveySchedule> Admin_SurveySchedule { get; set; }
        public virtual DbSet<Admin_SurveyScheduleCustomTime> Admin_SurveyScheduleCustomTime { get; set; }
        public virtual DbSet<AppHelp> AppHelps { get; set; }
        public virtual DbSet<Blog> Blogs { get; set; }
        public virtual DbSet<CTest> CTests { get; set; }
        public virtual DbSet<CTest_3DFigure> CTest_3DFigure { get; set; }
        public virtual DbSet<CTest_3DFigureResult> CTest_3DFigureResult { get; set; }
        public virtual DbSet<CTest_CatAndDogNewResult> CTest_CatAndDogNewResult { get; set; }
        public virtual DbSet<CTest_CatAndDogNewResultDtl> CTest_CatAndDogNewResultDtl { get; set; }
        public virtual DbSet<CTest_CatAndDogResult> CTest_CatAndDogResult { get; set; }
        public virtual DbSet<CTest_DigitSpanResult> CTest_DigitSpanResult { get; set; }
        public virtual DbSet<CTest_JewelsTrailsAResult> CTest_JewelsTrailsAResult { get; set; }
        public virtual DbSet<CTest_JewelsTrailsAResultDtl> CTest_JewelsTrailsAResultDtl { get; set; }
        public virtual DbSet<CTest_JewelsTrailsBResult> CTest_JewelsTrailsBResult { get; set; }
        public virtual DbSet<CTest_JewelsTrailsBResultDtl> CTest_JewelsTrailsBResultDtl { get; set; }
        public virtual DbSet<CTest_NBackNewResult> CTest_NBackNewResult { get; set; }
        public virtual DbSet<CTest_NBackResult> CTest_NBackResult { get; set; }
        public virtual DbSet<CTest_ScratchImage> CTest_ScratchImage { get; set; }
        public virtual DbSet<CTest_ScratchImageResult> CTest_ScratchImageResult { get; set; }
        public virtual DbSet<CTest_Serial7Result> CTest_Serial7Result { get; set; }
        public virtual DbSet<CTest_SimpleMemoryResult> CTest_SimpleMemoryResult { get; set; }
        public virtual DbSet<CTest_SpatialResult> CTest_SpatialResult { get; set; }
        public virtual DbSet<CTest_SpatialResultDtl> CTest_SpatialResultDtl { get; set; }
        public virtual DbSet<CTest_SpinWheelResult> CTest_SpinWheelResult { get; set; }
        public virtual DbSet<CTest_TemporalOrderResult> CTest_TemporalOrderResult { get; set; }
        public virtual DbSet<CTest_TrailsBDotTouchResult> CTest_TrailsBDotTouchResult { get; set; }
        public virtual DbSet<CTest_TrailsBDotTouchResultDtl> CTest_TrailsBDotTouchResultDtl { get; set; }
        public virtual DbSet<CTest_TrailsBNewResult> CTest_TrailsBNewResult { get; set; }
        public virtual DbSet<CTest_TrailsBNewResultDtl> CTest_TrailsBNewResultDtl { get; set; }
        public virtual DbSet<CTest_TrailsBResult> CTest_TrailsBResult { get; set; }
        public virtual DbSet<CTest_TrailsBResultDtl> CTest_TrailsBResultDtl { get; set; }
        public virtual DbSet<CTest_VisualAssociationResult> CTest_VisualAssociationResult { get; set; }
        public virtual DbSet<HealthKit_BasicInfo> HealthKit_BasicInfo { get; set; }
        public virtual DbSet<HealthKit_DailyValues> HealthKit_DailyValues { get; set; }
        public virtual DbSet<HealthKit_Parameters> HealthKit_Parameters { get; set; }
        public virtual DbSet<HealthKit_ParamValues> HealthKit_ParamValues { get; set; }
        public virtual DbSet<HelpCall> HelpCalls { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Repeat> Repeats { get; set; }
        public virtual DbSet<Slot> Slots { get; set; }
        public virtual DbSet<Survey> Surveys { get; set; }
        public virtual DbSet<SurveyQuestionOption> SurveyQuestionOptions { get; set; }
        public virtual DbSet<SurveyQuestion> SurveyQuestions { get; set; }
        public virtual DbSet<SurveyResult> SurveyResults { get; set; }
        public virtual DbSet<SurveyResultDtl> SurveyResultDtls { get; set; }
        public virtual DbSet<Tip> Tips { get; set; }
        public virtual DbSet<UserDevice> UserDevices { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserSetting> UserSettings { get; set; }
    
        public virtual ObjectResult<Admin_GetUserDataToExport_sp_Result> Admin_GetUserDataToExport_sp(string p_UserIDsXML, Nullable<System.DateTime> p_DateFrom, Nullable<System.DateTime> p_DateTo, ObjectParameter p_ErrID)
        {
            var p_UserIDsXMLParameter = p_UserIDsXML != null ?
                new ObjectParameter("p_UserIDsXML", p_UserIDsXML) :
                new ObjectParameter("p_UserIDsXML", typeof(string));
    
            var p_DateFromParameter = p_DateFrom.HasValue ?
                new ObjectParameter("p_DateFrom", p_DateFrom) :
                new ObjectParameter("p_DateFrom", typeof(System.DateTime));
    
            var p_DateToParameter = p_DateTo.HasValue ?
                new ObjectParameter("p_DateTo", p_DateTo) :
                new ObjectParameter("p_DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetUserDataToExport_sp_Result>("Admin_GetUserDataToExport_sp", p_UserIDsXMLParameter, p_DateFromParameter, p_DateToParameter, p_ErrID);
        }
    
        public virtual ObjectResult<Admin_SaveCTestSchedule_sp_Result> Admin_SaveCTestSchedule_sp(Nullable<long> p_AdminCTestSchID, Nullable<long> p_AdminID, Nullable<long> p_CTestID, Nullable<int> p_Version, Nullable<System.DateTime> p_ScheduleDate, Nullable<long> p_SlotID, Nullable<System.DateTime> p_Time, Nullable<long> p_RepeatID, string p_CustomTimeXML, ObjectParameter p_ErrID)
        {
            var p_AdminCTestSchIDParameter = p_AdminCTestSchID.HasValue ?
                new ObjectParameter("p_AdminCTestSchID", p_AdminCTestSchID) :
                new ObjectParameter("p_AdminCTestSchID", typeof(long));
    
            var p_AdminIDParameter = p_AdminID.HasValue ?
                new ObjectParameter("p_AdminID", p_AdminID) :
                new ObjectParameter("p_AdminID", typeof(long));
    
            var p_CTestIDParameter = p_CTestID.HasValue ?
                new ObjectParameter("p_CTestID", p_CTestID) :
                new ObjectParameter("p_CTestID", typeof(long));
    
            var p_VersionParameter = p_Version.HasValue ?
                new ObjectParameter("p_Version", p_Version) :
                new ObjectParameter("p_Version", typeof(int));
    
            var p_ScheduleDateParameter = p_ScheduleDate.HasValue ?
                new ObjectParameter("p_ScheduleDate", p_ScheduleDate) :
                new ObjectParameter("p_ScheduleDate", typeof(System.DateTime));
    
            var p_SlotIDParameter = p_SlotID.HasValue ?
                new ObjectParameter("p_SlotID", p_SlotID) :
                new ObjectParameter("p_SlotID", typeof(long));
    
            var p_TimeParameter = p_Time.HasValue ?
                new ObjectParameter("p_Time", p_Time) :
                new ObjectParameter("p_Time", typeof(System.DateTime));
    
            var p_RepeatIDParameter = p_RepeatID.HasValue ?
                new ObjectParameter("p_RepeatID", p_RepeatID) :
                new ObjectParameter("p_RepeatID", typeof(long));
    
            var p_CustomTimeXMLParameter = p_CustomTimeXML != null ?
                new ObjectParameter("p_CustomTimeXML", p_CustomTimeXML) :
                new ObjectParameter("p_CustomTimeXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_SaveCTestSchedule_sp_Result>("Admin_SaveCTestSchedule_sp", p_AdminCTestSchIDParameter, p_AdminIDParameter, p_CTestIDParameter, p_VersionParameter, p_ScheduleDateParameter, p_SlotIDParameter, p_TimeParameter, p_RepeatIDParameter, p_CustomTimeXMLParameter, p_ErrID);
        }
    
        public virtual ObjectResult<Admin_SaveSurveySchedule_sp_Result> Admin_SaveSurveySchedule_sp(Nullable<long> p_AdminSurveySchID, Nullable<long> p_AdminID, Nullable<long> p_SurveyID, Nullable<System.DateTime> p_ScheduleDate, Nullable<long> p_SlotID, Nullable<System.DateTime> p_Time, Nullable<long> p_RepeatID, string p_CustomTimeXML, ObjectParameter p_ErrID)
        {
            var p_AdminSurveySchIDParameter = p_AdminSurveySchID.HasValue ?
                new ObjectParameter("p_AdminSurveySchID", p_AdminSurveySchID) :
                new ObjectParameter("p_AdminSurveySchID", typeof(long));
    
            var p_AdminIDParameter = p_AdminID.HasValue ?
                new ObjectParameter("p_AdminID", p_AdminID) :
                new ObjectParameter("p_AdminID", typeof(long));
    
            var p_SurveyIDParameter = p_SurveyID.HasValue ?
                new ObjectParameter("p_SurveyID", p_SurveyID) :
                new ObjectParameter("p_SurveyID", typeof(long));
    
            var p_ScheduleDateParameter = p_ScheduleDate.HasValue ?
                new ObjectParameter("p_ScheduleDate", p_ScheduleDate) :
                new ObjectParameter("p_ScheduleDate", typeof(System.DateTime));
    
            var p_SlotIDParameter = p_SlotID.HasValue ?
                new ObjectParameter("p_SlotID", p_SlotID) :
                new ObjectParameter("p_SlotID", typeof(long));
    
            var p_TimeParameter = p_Time.HasValue ?
                new ObjectParameter("p_Time", p_Time) :
                new ObjectParameter("p_Time", typeof(System.DateTime));
    
            var p_RepeatIDParameter = p_RepeatID.HasValue ?
                new ObjectParameter("p_RepeatID", p_RepeatID) :
                new ObjectParameter("p_RepeatID", typeof(long));
    
            var p_CustomTimeXMLParameter = p_CustomTimeXML != null ?
                new ObjectParameter("p_CustomTimeXML", p_CustomTimeXML) :
                new ObjectParameter("p_CustomTimeXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_SaveSurveySchedule_sp_Result>("Admin_SaveSurveySchedule_sp", p_AdminSurveySchIDParameter, p_AdminIDParameter, p_SurveyIDParameter, p_ScheduleDateParameter, p_SlotIDParameter, p_TimeParameter, p_RepeatIDParameter, p_CustomTimeXMLParameter, p_ErrID);
        }
    
        public virtual ObjectResult<GetAdminCTestScheduleByUserID_sp_Result> GetAdminCTestScheduleByUserID_sp(Nullable<long> p_UserID, Nullable<System.DateTime> p_LastFetchedTS, ObjectParameter p_LastUpdatedTS, ObjectParameter p_ErrID)
        {
            var p_UserIDParameter = p_UserID.HasValue ?
                new ObjectParameter("p_UserID", p_UserID) :
                new ObjectParameter("p_UserID", typeof(long));
    
            var p_LastFetchedTSParameter = p_LastFetchedTS.HasValue ?
                new ObjectParameter("p_LastFetchedTS", p_LastFetchedTS) :
                new ObjectParameter("p_LastFetchedTS", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdminCTestScheduleByUserID_sp_Result>("GetAdminCTestScheduleByUserID_sp", p_UserIDParameter, p_LastFetchedTSParameter, p_LastUpdatedTS, p_ErrID);
        }
    
        public virtual ObjectResult<GetAdminSurveyScheduleByUserID_sp_Result> GetAdminSurveyScheduleByUserID_sp(Nullable<long> p_UserID, Nullable<System.DateTime> p_LastFetchedTS, ObjectParameter p_LastUpdatedTS, ObjectParameter p_ErrID)
        {
            var p_UserIDParameter = p_UserID.HasValue ?
                new ObjectParameter("p_UserID", p_UserID) :
                new ObjectParameter("p_UserID", typeof(long));
    
            var p_LastFetchedTSParameter = p_LastFetchedTS.HasValue ?
                new ObjectParameter("p_LastFetchedTS", p_LastFetchedTS) :
                new ObjectParameter("p_LastFetchedTS", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdminSurveyScheduleByUserID_sp_Result>("GetAdminSurveyScheduleByUserID_sp", p_UserIDParameter, p_LastFetchedTSParameter, p_LastUpdatedTS, p_ErrID);
        }
    
        public virtual ObjectResult<GetJewelsTrailsAResult_sp_Result> GetJewelsTrailsAResult_sp(Nullable<long> p_UserID, ObjectParameter p_ErrID)
        {
            var p_UserIDParameter = p_UserID.HasValue ?
                new ObjectParameter("p_UserID", p_UserID) :
                new ObjectParameter("p_UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetJewelsTrailsAResult_sp_Result>("GetJewelsTrailsAResult_sp", p_UserIDParameter, p_ErrID);
        }
    
        public virtual ObjectResult<GetJewelsTrailsBResult_sp_Result> GetJewelsTrailsBResult_sp(Nullable<long> p_UserID, ObjectParameter p_ErrID)
        {
            var p_UserIDParameter = p_UserID.HasValue ?
                new ObjectParameter("p_UserID", p_UserID) :
                new ObjectParameter("p_UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetJewelsTrailsBResult_sp_Result>("GetJewelsTrailsBResult_sp", p_UserIDParameter, p_ErrID);
        }
    
        public virtual ObjectResult<SaveHealthKitData_sp_Result> SaveHealthKitData_sp(Nullable<long> p_UserID, Nullable<System.DateTime> p_DateOfBirth, string p_Sex, string p_BloodType, string p_Height, string p_Weight, string p_HeartRate, string p_BloodPressure, string p_RespiratoryRate, string p_Sleep, string p_Steps, string p_FlightClimbed, string p_Segment, string p_Distance, ObjectParameter p_ErrID)
        {
            var p_UserIDParameter = p_UserID.HasValue ?
                new ObjectParameter("p_UserID", p_UserID) :
                new ObjectParameter("p_UserID", typeof(long));
    
            var p_DateOfBirthParameter = p_DateOfBirth.HasValue ?
                new ObjectParameter("p_DateOfBirth", p_DateOfBirth) :
                new ObjectParameter("p_DateOfBirth", typeof(System.DateTime));
    
            var p_SexParameter = p_Sex != null ?
                new ObjectParameter("p_Sex", p_Sex) :
                new ObjectParameter("p_Sex", typeof(string));
    
            var p_BloodTypeParameter = p_BloodType != null ?
                new ObjectParameter("p_BloodType", p_BloodType) :
                new ObjectParameter("p_BloodType", typeof(string));
    
            var p_HeightParameter = p_Height != null ?
                new ObjectParameter("p_Height", p_Height) :
                new ObjectParameter("p_Height", typeof(string));
    
            var p_WeightParameter = p_Weight != null ?
                new ObjectParameter("p_Weight", p_Weight) :
                new ObjectParameter("p_Weight", typeof(string));
    
            var p_HeartRateParameter = p_HeartRate != null ?
                new ObjectParameter("p_HeartRate", p_HeartRate) :
                new ObjectParameter("p_HeartRate", typeof(string));
    
            var p_BloodPressureParameter = p_BloodPressure != null ?
                new ObjectParameter("p_BloodPressure", p_BloodPressure) :
                new ObjectParameter("p_BloodPressure", typeof(string));
    
            var p_RespiratoryRateParameter = p_RespiratoryRate != null ?
                new ObjectParameter("p_RespiratoryRate", p_RespiratoryRate) :
                new ObjectParameter("p_RespiratoryRate", typeof(string));
    
            var p_SleepParameter = p_Sleep != null ?
                new ObjectParameter("p_Sleep", p_Sleep) :
                new ObjectParameter("p_Sleep", typeof(string));
    
            var p_StepsParameter = p_Steps != null ?
                new ObjectParameter("p_Steps", p_Steps) :
                new ObjectParameter("p_Steps", typeof(string));
    
            var p_FlightClimbedParameter = p_FlightClimbed != null ?
                new ObjectParameter("p_FlightClimbed", p_FlightClimbed) :
                new ObjectParameter("p_FlightClimbed", typeof(string));
    
            var p_SegmentParameter = p_Segment != null ?
                new ObjectParameter("p_Segment", p_Segment) :
                new ObjectParameter("p_Segment", typeof(string));
    
            var p_DistanceParameter = p_Distance != null ?
                new ObjectParameter("p_Distance", p_Distance) :
                new ObjectParameter("p_Distance", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaveHealthKitData_sp_Result>("SaveHealthKitData_sp", p_UserIDParameter, p_DateOfBirthParameter, p_SexParameter, p_BloodTypeParameter, p_HeightParameter, p_WeightParameter, p_HeartRateParameter, p_BloodPressureParameter, p_RespiratoryRateParameter, p_SleepParameter, p_StepsParameter, p_FlightClimbedParameter, p_SegmentParameter, p_DistanceParameter, p_ErrID);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_ShowTableData(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShowTableData", tableNameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Admin_SaveBatchSchedule_sp_Result> Admin_SaveBatchSchedule_sp(Nullable<long> p_AdminBatchSchID, Nullable<long> p_AdminID, string p_BatchName, Nullable<System.DateTime> p_ScheduleDate, Nullable<long> p_SlotID, Nullable<System.DateTime> p_Time, Nullable<long> p_RepeatID, string p_CTestXML, string p_SurveyXML, string p_CustomTimeXML, ObjectParameter p_ErrID)
        {
            var p_AdminBatchSchIDParameter = p_AdminBatchSchID.HasValue ?
                new ObjectParameter("p_AdminBatchSchID", p_AdminBatchSchID) :
                new ObjectParameter("p_AdminBatchSchID", typeof(long));
    
            var p_AdminIDParameter = p_AdminID.HasValue ?
                new ObjectParameter("p_AdminID", p_AdminID) :
                new ObjectParameter("p_AdminID", typeof(long));
    
            var p_BatchNameParameter = p_BatchName != null ?
                new ObjectParameter("p_BatchName", p_BatchName) :
                new ObjectParameter("p_BatchName", typeof(string));
    
            var p_ScheduleDateParameter = p_ScheduleDate.HasValue ?
                new ObjectParameter("p_ScheduleDate", p_ScheduleDate) :
                new ObjectParameter("p_ScheduleDate", typeof(System.DateTime));
    
            var p_SlotIDParameter = p_SlotID.HasValue ?
                new ObjectParameter("p_SlotID", p_SlotID) :
                new ObjectParameter("p_SlotID", typeof(long));
    
            var p_TimeParameter = p_Time.HasValue ?
                new ObjectParameter("p_Time", p_Time) :
                new ObjectParameter("p_Time", typeof(System.DateTime));
    
            var p_RepeatIDParameter = p_RepeatID.HasValue ?
                new ObjectParameter("p_RepeatID", p_RepeatID) :
                new ObjectParameter("p_RepeatID", typeof(long));
    
            var p_CTestXMLParameter = p_CTestXML != null ?
                new ObjectParameter("p_CTestXML", p_CTestXML) :
                new ObjectParameter("p_CTestXML", typeof(string));
    
            var p_SurveyXMLParameter = p_SurveyXML != null ?
                new ObjectParameter("p_SurveyXML", p_SurveyXML) :
                new ObjectParameter("p_SurveyXML", typeof(string));
    
            var p_CustomTimeXMLParameter = p_CustomTimeXML != null ?
                new ObjectParameter("p_CustomTimeXML", p_CustomTimeXML) :
                new ObjectParameter("p_CustomTimeXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_SaveBatchSchedule_sp_Result>("Admin_SaveBatchSchedule_sp", p_AdminBatchSchIDParameter, p_AdminIDParameter, p_BatchNameParameter, p_ScheduleDateParameter, p_SlotIDParameter, p_TimeParameter, p_RepeatIDParameter, p_CTestXMLParameter, p_SurveyXMLParameter, p_CustomTimeXMLParameter, p_ErrID);
        }
    
        public virtual ObjectResult<Admin_GetBatchSchedule_sp_Result> Admin_GetBatchSchedule_sp(Nullable<long> p_AdminBatchSchID, ObjectParameter p_ErrID)
        {
            var p_AdminBatchSchIDParameter = p_AdminBatchSchID.HasValue ?
                new ObjectParameter("p_AdminBatchSchID", p_AdminBatchSchID) :
                new ObjectParameter("p_AdminBatchSchID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetBatchSchedule_sp_Result>("Admin_GetBatchSchedule_sp", p_AdminBatchSchIDParameter, p_ErrID);
        }
    
        public virtual ObjectResult<GetAdminBatchScheduleByUserID_sp_Result> GetAdminBatchScheduleByUserID_sp(Nullable<long> p_UserID, Nullable<System.DateTime> p_LastFetchedTS, ObjectParameter p_LastUpdatedTS, ObjectParameter p_ErrID)
        {
            var p_UserIDParameter = p_UserID.HasValue ?
                new ObjectParameter("p_UserID", p_UserID) :
                new ObjectParameter("p_UserID", typeof(long));
    
            var p_LastFetchedTSParameter = p_LastFetchedTS.HasValue ?
                new ObjectParameter("p_LastFetchedTS", p_LastFetchedTS) :
                new ObjectParameter("p_LastFetchedTS", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdminBatchScheduleByUserID_sp_Result>("GetAdminBatchScheduleByUserID_sp", p_UserIDParameter, p_LastFetchedTSParameter, p_LastUpdatedTS, p_ErrID);
        }
    
        public virtual ObjectResult<SaveHealthKitData_sp_v2_Result> SaveHealthKitData_sp_v2(Nullable<long> p_UserID, Nullable<System.DateTime> p_DateOfBirth, string p_Sex, string p_BloodType, string p_ValuesXML, ObjectParameter p_ErrID)
        {
            var p_UserIDParameter = p_UserID.HasValue ?
                new ObjectParameter("p_UserID", p_UserID) :
                new ObjectParameter("p_UserID", typeof(long));
    
            var p_DateOfBirthParameter = p_DateOfBirth.HasValue ?
                new ObjectParameter("p_DateOfBirth", p_DateOfBirth) :
                new ObjectParameter("p_DateOfBirth", typeof(System.DateTime));
    
            var p_SexParameter = p_Sex != null ?
                new ObjectParameter("p_Sex", p_Sex) :
                new ObjectParameter("p_Sex", typeof(string));
    
            var p_BloodTypeParameter = p_BloodType != null ?
                new ObjectParameter("p_BloodType", p_BloodType) :
                new ObjectParameter("p_BloodType", typeof(string));
    
            var p_ValuesXMLParameter = p_ValuesXML != null ?
                new ObjectParameter("p_ValuesXML", p_ValuesXML) :
                new ObjectParameter("p_ValuesXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaveHealthKitData_sp_v2_Result>("SaveHealthKitData_sp_v2", p_UserIDParameter, p_DateOfBirthParameter, p_SexParameter, p_BloodTypeParameter, p_ValuesXMLParameter, p_ErrID);
        }
    }
}
