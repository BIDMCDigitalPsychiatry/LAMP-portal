@model ScheduleGameSurveyViewModel
@using LAMP.Utility
@using System.Web
@using Newtonsoft.Json
@{
    ViewBag.Title = "AdminScheduleSurvey";
    Layout = "~/Views/Shared/_LayoutSchedule.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script type="text/javascript">
    function ConvertToLocalTime(elementId, dateTimeString) {
        var surveyDate = new Date((parseFloat(dateTimeString)));
        var surveySlotTime = formatDate(surveyDate);
        $('.optionText_' + elementId).val(surveySlotTime);
    }
</script>
<div class="content-wrapper">
    <div class="title-sub clearfix">
        <h4>Survey Schedule</h4>
        <a href="@Url.Action("ManageSchedule", "UserAdmin")" class="btn btn-primary back" title="Back">Back</a>
    </div>
    <div class="main-content clearfix">
        @if (TempData["SurveyStatus"] != null)
        {
            if (TempData["SurveyMessage"] != null)
            {
                var message = TempData["SurveyMessage"] as string;
                if (((short)TempData["SurveyStatus"] == 0))
                {
                    <div class="alert alert-success" role="alert" id="divNewSuccess">@message</div>
                }
                else if ((short)TempData["SurveyStatus"] > 0)
                {
                    <div class="alert alert-danger show" role="alert">@message</div>
                }
            }
        }
        @using (Html.BeginForm("AdminScheduleSurvey", "UserAdmin", FormMethod.Post, new { id = "ScheduleSurveyForm" }))
        {
            @Html.HiddenFor(model => model.AdminSurveySchID, new { @id = "AdminSurveySchID", @name = "AdminSurveySchID" })
            <div class="game-schedule">
                <h4>Symptom Survey</h4>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Select Survey</label>
                            @Html.DropDownListFor(m => Model.SurveyId, Model.SurveyList, new { @class = "selectpicker", @id = "ddlSurveyId" })
                            <span class="error-message" id="surveyValidation" style="display:none">Please select at least one survey.</span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Repeat</label>
                            @Html.DropDownListFor(m => Model.SurveyRepeatId, Model.RepeatList, new { @class = "selectpicker", @id = "ddlSurveyRepeatId" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" id="scheduleDateDiv">
                            <label>Select a schedule date</label>
                            <div class='input-group' id='schedulepick1'>
                                @Html.TextBoxFor(model => Model.SurveyScheduleDateString, new { @class = "form-control", @id = "txtSurveyScheduleDate", @onkeydown = "return false;" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                            <span class="error-message" id="scheduleDateValidation" style="display:none">Please select a scheduled date.</span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" id="slotTimeDiv">
                            <label>Slot Time</label>
                            <div class='input-group date' id='Timer1'>
                                @Html.TextBoxFor(model => Model.SurveySlotTimeString, new { @class = "form-control", @id = "txtSurveySlotTime", @readonly = true })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                            <span class="error-message" id="SurveySlotTimeValidation" style="display:none">Please select a survey time slot.</span>
                            <span class="error-message" id="surveyTimeValidation" style="display:none"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        @if (Model.OptionsStringList == null)
                        {
                            <div class="form-group" style="display:none" id="optionsDiv">
                                <label>Time Options</label>
                                <div class="add-sec">
                                    <div class='input-group date schedulepick' id='schedulepick0'>
                                        <input type='text' class="form-control optInput optionText_0" id="optionTextBox" readonly />
                                        <input type="hidden" id="optionId" class="optionId" value="0" />
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-time"></span>
                                        </span>
                                    </div>

                                    <div class="controls">
                                        <button type="button" class="glyphicon glyphicon-plus add-icn addButton" id="addButton" onclick="return AddOptionRow(this)"></button>
                                        <button type="button" class="glyphicon glyphicon-remove add-icn removeButton" id="removeButton" onclick="return RemoveOptionRow(this)" style="display:none"></button>
                                    </div>
                                </div>

                            </div>
                        }
                        else
                        {
                            int rowCount = 0;
                            <div class="form-group" id="optionsDiv">
                                <label>Time Options</label>

                                @foreach (string item in Model.OptionsStringList)
                                {
                                    <script type="text/javascript">
                                        $(document).ready(function () {
                                            @{
                                            <text>

                                            ConvertToLocalTime('@rowCount', '@item');
                                            </text>
                                         }

                                        });
                                    </script>
                                    <div class="add-sec">
                                        <div class='input-group date schedulepick' id='schedulepick0'>
                                            <input type="text" class="form-control optInput optionText_@rowCount" id="optionTextBox" readonly>
                                            <input type="hidden" id="optionId" class="optionId" />
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-time"></span>
                                            </span>
                                        </div>
                                        <div class="controls">
                                            @if (rowCount == Model.OptionsStringList.Count - 1 && rowCount < 9)
                                            {
                                                <button type="button" class="glyphicon glyphicon-plus add-icn addButton" id="addButton" onclick="return AddOptionRow(this)"></button>
                                                <button type="button" class="glyphicon glyphicon-remove add-icn removeButton" id="removeButton" onclick="return RemoveOptionRow(this)" style="display:none"></button>


                                            }
                                            else
                                            {
                                                <button type="button" class="glyphicon glyphicon-plus add-icn addButton" id="addButton" onclick="return AddOptionRow(this)" style="display:none"></button>
                                                <button type="button" class="glyphicon glyphicon-remove add-icn removeButton" id="removeButton" onclick="return RemoveOptionRow(this)"></button>

                                            }

                                        </div>
                                    </div>
                                            rowCount++;
                                }
                            </div>
                        }
                        <span class="error-message" id="optionsSpan" style="display:none"></span>
                    </div>
                </div>


                @Html.HiddenFor(model => Model.SurveyScheduleDateValue, new { @id = "SurveyScheduleDateValue" })
                @Html.HiddenFor(model => Model.Options, new { @id = "Options", @name = "Options" })
                @Html.HiddenFor(model => Model.OptionsArray, new { @id = "OptionsArray", @name = "OptionsArray" })
                <button type="button" class="btn btn-primary" onclick="return savesurveyschedule();" title="Submit">Submit</button>
            </div>
        }
    </div>
</div>
@section page_scripts
{
    <script src="~/Scripts/Pages/surveyschedule.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            @if (@Model.Status == 0 && @Model.IsSaved==true)
          {
              @:$('#divSuccess').show();
                                                                                                              @:CallTimerForBackToUsers();
                                                                                                          }
          else
          {
          }

            @if (TempData["GameStatus"] != null)
          {
              if (TempData["IsSaved"] != null)
              {

                  if (((short)TempData["GameStatus"] == 0) && (bool)TempData["IsSaved"] == true)
                  {
                      @:$('#divNewSuccess').show();
                                                                                                                      @:CallTimerForBackToUsers();
                                                                                                                  }
              else
              {
                    }
          }
    }
            function Clear() {
                var url = '@Url.Action("ManageSchedule", "UserAdmin")';
                window.location.href = url;
            }

            function CallTimerForBackToUsers() {
                setTimeout(function () { CallBackToUsers(); }, 2000);
            }

            function CallBackToUsers() {
                var url = '@Url.Action("ManageSchedule", "UserAdmin")';
                window.location.href = url;
            }
        });
    </script>
}












