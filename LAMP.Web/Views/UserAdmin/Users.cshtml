@model AdminandUserListViewModel
@using PagedList.Mvc;
@using System.Configuration;
@using LAMP.Utility
@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@{<input type="hidden" name="path" id="path" value="@ConfigurationManager.AppSettings["ProductionPath"]" />}
<div class="content-wrapper">
    <div class="user-head clearfix">
        @if (Model.UserTypeDropdownId == "1")
        {
            <h4 id="headerAdminOrUsers">Users <span class="count" id="spanTotalUser">@Model.UserListViewModel.TotalRows</span></h4>
        }
        else
        {
            <h4 id="headerAdminOrUsers">Admins <span class="count" id="spanTotalUser">@Model.AdminListViewModel.TotalRows</span></h4>
        }
        <div class="right-block">
            @if (Model.LoggedInAdminId == 1)
            {
                <div class="input-group">
                    @Html.DropDownListFor(model => Model.UserTypeDropdownId, new SelectList(Model.UserListViewModel.UserTypeList, "Value", "Text"), new { id = "userTypeDropdownId", name = "userTypeDropdownId", @class = "form-control" })
                </div>
            }
            @if (Model.UserTypeDropdownId == "1")
            {
                <div class="input-group">
                    <div id="searchBox">
                        @Html.TextBoxFor(model => Model.UserListViewModel.SearchId, new { @class = "form-control", id = "txtSearchId", @tabindex = 2, placeholder = "Search with ID" })
                    </div>
                    <button class="btn search" name="Command" value="Search" id="btnSearch"></button>
                </div>
            }
            else
            {
                <div class="input-group">
                    <div id="searchBox">
                        @Html.TextBoxFor(model => Model.AdminListViewModel.SearchId, new { @class = "form-control", id = "txtSearchId", @tabindex = 2, placeholder = "Search with Name" })
                    </div>
                    <button class="btn search" name="Command" value="Search" id="btnSearch"></button>
                </div>
            }
            @if (Model.UserTypeDropdownId == "1")
            {
                <a id="anchor_add" role="button" title="Add New User" href="@Url.Action("Edit", "UserAdmin")" class="adduser">
                    <i class="add"></i> Add New User
                </a>
            }
            else
            {
                <a id="anchor_add" role="button" title="Add New Admin" href="@Url.Action("CreateAdmin", "UserAdmin")" class="adduser">
                    <i class="add"></i> Add New Admin
                </a>

            }
        </div>
    </div>

    <div class="select-all clearfix" id="DivExport">
        <div class="select-check">
            <input type="checkbox" class="check" id="checkAll">
            <label for="selectall">Select All</label>
        </div>
        <div class="date-select">
            <div class='input-group' id='dateimport1'>
                @Html.TextBoxFor(model => Model.FromDateString, new { @class = "form-control", @id = "txtFromDate", @placeholder = "From Date", @onkeydown = "return false;" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <span class="error-message" id="fromDateValidation" style="display:none">Please select From Date</span>
            <div class='input-group' id='dateimport2'>
                @Html.TextBoxFor(model => Model.ToDateString, new { @class = "form-control", @id = "txtToDate", @placeholder = "To Date", @onkeydown = "return false;" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <span class="error-message" id="toDateValidation" style="display:none">Please select To Date</span>
            <span class="error-message" id="checkBoxValidation" style="display:none">Please select users</span>
            <button type="button" class="btn btn-primary" id="btnExport" onclick="ExportExcel()">Export</button>
        </div>
    </div>

    @if (Model.UserTypeDropdownId == "1")
    {
        <div class="table-responsive" id="divUserList">
            @{ Html.RenderPartial("_UserListPartial", Model); }
        </div>


    }
    else
    {
        <div class="table-responsive" id="divUserList">
            @{ Html.RenderPartial("_AdminListPartial", Model); }
        </div>
    }

</div>
@{Html.RenderPartial("_ProtocolPartial", new LAMP.ViewModel.ProtocolViewModel());}
@section page_scripts{
    <script src='@Url.Content("~/Scripts/Pages/user.js")' type='text/javascript'></script>
    <script src="~/Content/Default/js/moment.min.js"></script>
    <script src="~/Content/Default/js/bootstrap-select.min.js"></script>
    <script src="~/Content/Default/js/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $(function () {
                $('#dateimport1').datetimepicker({
                    format: 'DD/MM/YYYY'
                });
                $('#dateimport2').datetimepicker({
                    format: 'DD/MM/YYYY'
                });
                $('#Timer1').datetimepicker({
                    format: 'LT'
                });

                $('#schedulepick1').datetimepicker({
                    format: 'DD/MM/YYYY',
                    minDate: new Date()
                });


            });
            @if(Model.LoggedInAdminId == 1)
                {
             @: var dropdwonid = $('#userTypeDropdownId').val();
                           @: if (dropdwonid == 1)
                                {
                   @: $('#DivExport').show();
                                }
                  @:  else
                                {
               @:  $('#DivExport').hide();
                            }
             }
            /*** on select all***/
            $('#checkAll').on('click', function () {
                $(".check").prop('checked', $(this).prop('checked'));
                if (this.checked) {
                    $('.check').each(function () {
                        this.checked = true;
                    });
                } else {
                    $('.check').each(function () {
                        this.checked = false;
                    });
                }
            }).change();
            $('.check').on('click', function () {
                if ($(".check:checked").length > 0) {
                }
                else {
                }
                if ($('.check:checked').length == $('.check').length) {
                    $('#checkAll').prop('checked', true);
                } else {
                    $('#checkAll').prop('checked', false);
                }
            });
        });

        $('#userTypeDropdownId').change(function () {
            var mode = $('#userTypeDropdownId').val();
            $.ajax({
                url: '@Url.Action("LoadAdminOrUsers", "UserAdmin")',
                data: {
                    mode: mode
                }
            }).done(function (data) {
                $("#divUserList").html(data);
                OnSuccess(data);
            });
        });

        $('#btnSearch').click(function (event) {
            $('#searchString').val($('#txtSearchId').val());
            $('#page').val(1);
            $('#userListForm').trigger('submit');
        });

        $("#txtSearchId").keyup(function (event) {
            var key = event.keyCode || event.charCode;
            if (key == 8 || key == 46) {
                if ($(this).val() == "") {
                    $("#btnSearch").click();
                }
            }
        });
        var curr_mode = "1";
    </script>
}

