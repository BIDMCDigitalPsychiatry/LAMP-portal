@model CognitionTrailsBViewModel
@using System.Globalization;
@using Newtonsoft.Json
@using PagedList.Mvc;
@using LAMP.Utility
@{
    Layout = null;
}
<!-- Game Modal -->
<div class="modal fade" id="GameModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
</div>
<table class="table table-bordered">
    <tr>
        <th>Total Attempts</th>
        <th>Start Time</th>
        <th>Duration</th>
        <th>Details</th>
        <th>Exit / Complete</th>
    </tr>
    @if (Model.CTest_TrailsBResultList.Count > 0)
    {
        foreach (CognitionTrailsBDetail CTest in Model.CTest_TrailsBResultList)
        {
            <tr>
                <td>@CTest.TotalAttempts</td>
                <td>@CTest.StartTime.ToString("MM/dd/yyyy hh:mm tt", CultureInfo.InvariantCulture)</td>
                <td>@CTest.DurationString</td>
                <td><a data-toggle="modal" onclick="showModal(@CTest.TrailsBResultID)"><span class="@CTest.Rating.ToLower().Replace(' ','-')">View Details</span></a></td>
                <td>@(CTest.Status == 1 ? ExitOrCompleteStatus.Exited : ExitOrCompleteStatus.Completed)</td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="5">
                <div id="divRegquestGridNone" class="" style="">No records found.</div>
            </td>
        </tr>
    }
</table>
@Html.HiddenFor(model => Model.SortPageOptions.CurrentPage, new { @id = "CurrentPage", @name = "CurrentPage" })
@Html.HiddenFor(model => Model.SortPageOptions.PageSize, new { @id = "PageSize", @name = "PageSize" })
@if (Model.PagedCTest_TrailsBDetailList != null)
{
    <div class="row col-sm-12">
        <div class="pull-right">
            <div class="dataTables_paginate paging_bs_normal">
                @if (Model.TotalRows > Model.SortPageOptions.PageSize)
                {
                    <div>
                        @Html.PagedListPager(Model.PagedCTest_TrailsBDetailList, page => Url.Action("Cognition_TrailsB", new { page, pageSize = Model.SortPageOptions.PageSize, userId = Model.UserID, adminBatchSchID = 0 }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions { LinkToPreviousPageFormat = String.Format("<"), LinkToNextPageFormat = String.Format(">") }, new AjaxOptions() { HttpMethod = "GET", LoadingElementId = "imgloaderIndex", UpdateTargetId = "divCTestTrailB" }))
                    </div>
                }
            </div>
        </div><div class="clearfix"></div>
    </div>
}
<script type="text/javascript">
    var jsonTrailsBResultList = @Html.Raw(JsonConvert.SerializeObject(@Model.CTest_TrailsBResultList));
    function showModal(TrailsBResultID) {
        //filetering the result with current TrailsBResultID
        var trailsBResultObject = jsonTrailsBResultList.filter(function (obj) {
            return obj.TrailsBResultID == TrailsBResultID;
        })[0];
        //For Getting sequence array
        var arrayOfSequence=[];
        if(trailsBResultObject.CognitionTrailsBResultDetail.length>0)
        {
            for(i=0;i<trailsBResultObject.CognitionTrailsBResultDetail.length;i++)
            {
                arrayOfSequence.push(trailsBResultObject.CognitionTrailsBResultDetail[i].Sequence);
            }
        }
        Array.prototype.contains = function(v) {
            for(var i = 0; i < this.length; i++) {
                if(this[i] === v) return true;
            }
            return false;
        };
        Array.prototype.unique = function() {
            var arr = [];
            for(var i = 0; i < this.length; i++) {
                if(!arr.contains(this[i])) {
                    arr.push(this[i]);
                }
            }
            return arr;
        }
        //getting unique sequence array
        var uniqueSequence=[];
        uniqueSequence = arrayOfSequence.unique();
        var modalHmtl='<div class="modal-dialog" role="document">'+
                       '<div class="modal-content">'+
                       '<div class="modal-header">'+
                       '<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>'+
                       '<h4 class="modal-title" id="myModalLabel">Detail View</h4>'+
                       '</div>'+
                       '<div class="modal-body">'+
                       '<div class="cognition-graph">';
        if(trailsBResultObject.CognitionTrailsBResultDetail.length>0)
        {
            for(i=0;i<uniqueSequence.length;i++)
            {   modalHmtl+='<p>Sequence '+(i+1)+'</p>';
            modalHmtl+='<div class="multiple-sequence">';


                //**********************************************************
                var itemsInASequence = [];


                itemsInASequence = $.grep(trailsBResultObject.CognitionTrailsBResultDetail, function(element){ return element.Sequence == uniqueSequence[i]; })

                //**************************************************************************
                for(j=0; j < itemsInASequence.length; j++)
                {
                    if(j != 0)
                    {
                        modalHmtl+='<div class="msq sq1">';
                        modalHmtl+='<div class="process">';
                        if( itemsInASequence[j].Status==true)
                        { 
                            modalHmtl+='<div class="arrow green"></div>';
                        }
                        else{
                            modalHmtl+='<div class="arrow red"></div>';
                        }
                        modalHmtl+='<span class="count">'+ itemsInASequence[j].TimeTaken +' millisec.</span>';
                        modalHmtl+='</div>';
                        modalHmtl+='<h4>'+ itemsInASequence[j].Alphabet +'</h4>';
                        modalHmtl+='</div>';
                    }
                    else
                        modalHmtl+='<h4>'+ itemsInASequence[j].Alphabet +'</h4>';

                }
                modalHmtl+='</div>';
            }
        }
        else{
            modalHmtl+='No Data';
        }
        modalHmtl+='</div>';
        modalHmtl+='</div>';
        modalHmtl+='</div>';
        modalHmtl+='</div>';
        $("#GameModal").html(modalHmtl);
        $('#GameModal').modal('show');
    }
</script>
