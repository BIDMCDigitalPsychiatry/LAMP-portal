@model SurveyResultsViewModel
@using PagedList.Mvc;
@{
    Layout = null;
}
<table id="surveydetailslist" class="table table-bordered">
    <tr>
        <th>QUESTIONS</th>
        <th>ANSWERS</th>
        <th>TIME TAKEN</th>
        <th>CLICK RANGE</th>
    </tr>
    @if (Model.QuestAndAnsList.Count > 0)
    {
        foreach (SurveyResultsDetail QAndA in Model.QuestAndAnsList)
        {
            var timeTaken = "";
            var clickRange = "";

            if (@QAndA.TimeTaken.ToString().Length > 0)
            {
                timeTaken = @QAndA.TimeTaken.ToString();
            }

            if (@QAndA.ClickRange != null)
            {
                clickRange = @QAndA.ClickRange.Replace(",", ", ");
            }
            <tr>
                <td>@QAndA.Question</td>
                <td>@QAndA.CorrectAnswer</td>
                <td>@timeTaken</td>
                <td>@clickRange</td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="4">
                <div id="divRegquestGridNone" class="" style="">No records found.</div>
            </td>
        </tr>
    }
</table>
@Html.HiddenFor(model => Model.SortPageOptions.CurrentPage, new { @id = "CurrentPage", @name = "CurrentPage" })
@Html.HiddenFor(model => Model.SortPageOptions.PageSize, new { @id = "PageSize", @name = "PageSize" })
@Html.HiddenFor(model => Model.SortPageOptions.SortField, new { @id = "SortField", @name = "SortField" })
@Html.HiddenFor(model => Model.SortPageOptions.SortOrder, new { @id = "SortOrder", @name = "SortOrder" })
@if (Model.PagedSurveyResultsDetailList != null)
{
    <div class="row col-sm-12">
        <div class="pull-right">
            <div class="dataTables_paginate paging_bs_normal">
                @if (Model.TotalRows > Model.SortPageOptions.PageSize)
                {
                    <div>
                        @Html.PagedListPager(Model.PagedSurveyResultsDetailList, page => Url.Action("SurveyDetails", new { page, sortColumn = Model.SortPageOptions.SortField, sortOrder = Model.SortPageOptions.SortOrder, pageSize = Model.SortPageOptions.PageSize, surveyResultId = Model.SurveyResultID, studyId = Model.StudyId, AdminBatchSchID = 0 }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions { LinkToPreviousPageFormat = String.Format("<"), LinkToNextPageFormat = String.Format(">") }, new AjaxOptions() { HttpMethod = "GET", LoadingElementId = "imgloaderIndex", UpdateTargetId = "divSurveyDetailsList" }))
                    </div>
                }
            </div>
        </div><div class="clearfix"></div>
    </div>
}
